    HEAP SORT ALGORITHM

1.Start.
2.Input elements to be sorted from the user and store in the array a[].
3.Define heapsort(int a[],int n) , buildheap(int a[],int n) , extractmax(int a[],int n) , heapify(int a[],int i, int n) , swap (int a[],int i, int j) .
4.Procedure: heapsort(int a[],int n)
       4.1: Start.
       4.2: Call buildheap(a,n) .      
       4.3: Call extractmax(a,n) .       
       4.4: Stop.
5.Procedure: buildheap(int a[],int n)
       5.1: Start.
       5.2: for(int i=n/2-1;i>=0;i--)
             Call heapify(a,i,n) method.      
       5.3: Stop.
6.Procedure: extractmax(int a[],int n)
       6.1: while (n>1)
            6.1.1: n--        
            6.1.2: swap(a,0,n)        
            6.1.3: heapify(a,0,n)        
       6.2: End while loop.
       6.3: Stop.


7.Procedure: heapify(int a[],int i, int n)
       7.1: Start.
       7.2: Initialize int k=2*i+1         
       7.3: while (k<n)
           7.3.1: if (k+1<n && a[k+1]>a[k])
                     k++        
           7.3.2: if (a[i]>=a[k])
                    return   
           7.3.3: else
                    swap(a,i, k)        
                    i=k        
                    k=2*i+1        
           7.3.4: End while loop.
       7.4: Stop.
8.Procedure: swap (int a[],int i, int j)
       8.1: Start.
       8.2: Declare int t        
       8.3: t= a[i]        
       8.4: a[i] = a[j]        
       8.5: a[j] = t        
       8.6: Stop.
9.Then print the sorted elements.
10.Stop.
